<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on Arjen Wiersma</title>
    <link>http://localhost:1313/notes/</link>
    <description>Recent content in Notes on Arjen Wiersma</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Arjen Wiersma</copyright>
    <lastBuildDate>Tue, 15 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Developer Growth</title>
      <link>http://localhost:1313/notes/developer-growth/</link>
      <pubDate>Tue, 15 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/developer-growth/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://cleancoder.com/&#34;&gt;Uncle Bob&lt;/a&gt;, in his presentations, likes to say that the number of developers in the world doubles every 5 years. Recently The Primeagen in one of his &lt;a href=&#34;https://youtube.com/shorts/42S4YPUK8N4?si=lB-6tHBJfpi4dfYi&#34;&gt;shorts&lt;/a&gt; says that they double every 6 years. They both do not give any source for this information, so can it be validated?&lt;/p&gt;&#xA;&lt;p&gt;The Netherlands has an agency called &lt;a href=&#34;https://www.cbs.nl&#34;&gt;Centraal Bureau voor de Statistiek (CBS)&lt;/a&gt; which collects all kinds of statistics about the country. It turns out that they also have statistics on the type of field people work in.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up Emacs for Clojure development</title>
      <link>http://localhost:1313/notes/clojure-emacs/</link>
      <pubDate>Thu, 09 Jan 2025 20:25:59 +0100</pubDate>
      <guid>http://localhost:1313/notes/clojure-emacs/</guid>
      <description>&lt;p&gt;Emacs ðŸ¥° Lisp, and as &lt;a href=&#34;http://localhost:1313/notes/clojure/&#34; class=&#34;backlink&#34;&gt;Clojure&lt;/a&gt;&#xA; is a Lisp like language, Emacs is extremely capable in editing it. I use several packages to make my live a joy inside Emacs, here are the &lt;a href=&#34;http://localhost:1313/notes/clojure/&#34; class=&#34;backlink&#34;&gt;Clojure&lt;/a&gt;&#xA; specific packages:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://paredit.org/&#34;&gt;paredit&lt;/a&gt;: I highly recommend it to work with any lisp, it makes working with the parenthesis a real joy. There is an &lt;a href=&#34;http://danmidwood.com/content/2014/11/21/animated-paredit.html&#34;&gt;animated guide&lt;/a&gt; of most of the features.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://cider.mx/&#34;&gt;cider&lt;/a&gt;: The only thing you need to run and work with Clojure files&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/borkdude/flycheck-clj-kondo&#34;&gt;flycheck-clj-kondo&lt;/a&gt;: brings the hints from &lt;a href=&#34;https://github.com/clj-kondo/clj-kondo&#34;&gt;clj-kondo&lt;/a&gt; to the editing screen.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/clojure-emacs/clj-refactor.el&#34;&gt;clj-refactor&lt;/a&gt;: provides all the refactoring tools you will need&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/clojure-emacs/clojure-mode&#34;&gt;clojure-mode&lt;/a&gt;: finally the clojure mode to provide basic features (highlighting, indentation, navigation and basic refactoring) into Emacs.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;I have an &lt;a href=&#34;https://www.youtube.com/playlist?list=PLdKXxqwRv6_y7rHHjbrK38E59t9ost3o3&#34;&gt;YouTube playlist&lt;/a&gt; on my channel that covers most of these tools. The videos are from 2016 (when I did my live coding in Clojure series), but are still very relevant today.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Clojure programming language</title>
      <link>http://localhost:1313/notes/clojure/</link>
      <pubDate>Tue, 07 Jan 2025 22:18:54 +0100</pubDate>
      <guid>http://localhost:1313/notes/clojure/</guid>
      <description>&lt;p&gt;The Clojure programming language. It is a functional programming language on top of dthe JVM. It is a Lisp like language.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuring Emacs for Rust development</title>
      <link>http://localhost:1313/notes/rust-emacs/</link>
      <pubDate>Tue, 07 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/rust-emacs/</guid>
      <description>&lt;p&gt;Emacs is great for editing &lt;a href=&#34;http://localhost:1313/notes/rust/&#34; class=&#34;backlink&#34;&gt;Rust&lt;/a&gt;&#xA; source files. In addition to your normal Emacs configuration (such as completion modes) it requires 3 packages. First you will want &lt;code&gt;lsp-mode&lt;/code&gt;, a very full featured LSP client for Emacs. Additionally you will want &lt;code&gt;lsp-ui&lt;/code&gt;, which I only use for the &lt;code&gt;lsp-ui-imenu&lt;/code&gt; feature.&lt;/p&gt;&#xA;&lt;p&gt;Finally you will want to use &lt;code&gt;rustic&lt;/code&gt; as primary editing mode for &lt;a href=&#34;http://localhost:1313/notes/rust/&#34; class=&#34;backlink&#34;&gt;Rust&lt;/a&gt;&#xA; files.&lt;/p&gt;&#xA;&lt;figure class=&#34;codeblock not-prose relative scroll-mt-8&#34; id=&#34;codeblock-01&#34;&gt;&#xA;  &lt;aside&#xA;    class=&#34;absolute right-0 top-0 hidden rounded-bl-sm rounded-tr-sm bg-white/10 px-2 py-1 text-white/70 transition-opacity md:inline-block&#34;&#xA;  &gt;&#xA;    &lt;div class=&#34;codeblock-meta flex max-w-xs flex-row items-center space-x-3&#34;&gt;&#xA;      &lt;div class=&#34;small-caps shrink cursor-default truncate font-mono text-xs&#34; aria-hidden=&#34;true&#34;&gt;&#xA;        &lt;span class=&#34;relative&#34;&gt;elisp&lt;/span&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        &lt;clipboard-copy&#xA;          type=&#34;button&#34;&#xA;          aria-label=&#34;Copy code to clipboard&#34;&#xA;          title=&#34;Copy code to clipboard&#34;&#xA;          class=&#34;block cursor-pointer transition-colors hover:text-sky-400&#34;&#xA;          target=&#34;#codeblock-01 code&#34;&#xA;        &gt;&#xA;          &lt;svg&#xA;  xmlns=&#34;http://www.w3.org/2000/svg&#34;&#xA;  fill=&#34;none&#34;&#xA;  stroke=&#34;currentColor&#34;&#xA;  stroke-width=&#34;2&#34;&#xA;  stroke-linecap=&#34;round&#34;&#xA;  stroke-linejoin=&#34;round&#34;&#xA;  class=&#34;lucide lucide-clipboard h-4 w-4&#34;&#xA;  viewBox=&#34;0 0 24 24&#34;&#xA;&gt;&#xA;  &lt;rect width=&#34;8&#34; height=&#34;4&#34; x=&#34;8&#34; y=&#34;2&#34; rx=&#34;1&#34; ry=&#34;1&#34; /&gt;&#xA;  &lt;path d=&#34;M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2&#34; /&gt;&#xA;&lt;/svg&gt;&#xA;&#xA;        &lt;/clipboard-copy&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        &lt;a&#xA;          href=&#34;#codeblock-01&#34;&#xA;          class=&#34;block&#34;&#xA;          aria-label=&#34;Link to this code block&#34;&#xA;          title=&#34;Link to this code block&#34;&#xA;        &gt;&#xA;          &lt;svg&#xA;  xmlns=&#34;http://www.w3.org/2000/svg&#34;&#xA;  width=&#34;16&#34;&#xA;  height=&#34;16&#34;&#xA;  fill=&#34;none&#34;&#xA;  stroke=&#34;currentColor&#34;&#xA;  stroke-linecap=&#34;round&#34;&#xA;  stroke-linejoin=&#34;round&#34;&#xA;  stroke-width=&#34;2&#34;&#xA;  class=&#34;lucide lucide-link w-4 h-4 block&#34;&#xA;  viewBox=&#34;0 0 24 24&#34;&#xA;&gt;&#xA;  &lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; /&gt;&#xA;  &lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; /&gt;&#xA;&lt;/svg&gt;&#xA;&#xA;        &lt;/a&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/aside&gt;&#xA;  &lt;p class=&#34;sr-only&#34;&gt;elisp code snippet start&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Rust programming language</title>
      <link>http://localhost:1313/notes/rust/</link>
      <pubDate>Sun, 05 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/rust/</guid>
      <description>&lt;p&gt;This is the rust programming language&lt;/p&gt;</description>
    </item>
    <item>
      <title>Type-Driven Design</title>
      <link>http://localhost:1313/notes/type-driven-design/</link>
      <pubDate>Sun, 05 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/type-driven-design/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://localhost:1313/notes/rust/&#34; class=&#34;backlink&#34;&gt;Rust&lt;/a&gt;&#xA; has allows for a pattern called Type-Driven Design. In the below example a &lt;code&gt;SubscriberName&lt;/code&gt; is created. It has a single &lt;code&gt;String&lt;/code&gt; value. In &lt;em&gt;simple&lt;/em&gt; code this might be represented as &lt;code&gt;let subscriber_name = &amp;quot;Arjen&amp;quot;.to_string();&lt;/code&gt;. By making the type you can wrap the validation logic into the creation of the type. This means that wherever you get a paramter of type &lt;code&gt;SubscriberName&lt;/code&gt; you know it is valid.&lt;/p&gt;&#xA;&lt;figure class=&#34;codeblock not-prose relative scroll-mt-8&#34; id=&#34;codeblock-01&#34;&gt;&#xA;  &lt;aside&#xA;    class=&#34;absolute right-0 top-0 hidden rounded-bl-sm rounded-tr-sm bg-white/10 px-2 py-1 text-white/70 transition-opacity md:inline-block&#34;&#xA;  &gt;&#xA;    &lt;div class=&#34;codeblock-meta flex max-w-xs flex-row items-center space-x-3&#34;&gt;&#xA;      &lt;div class=&#34;small-caps shrink cursor-default truncate font-mono text-xs&#34; aria-hidden=&#34;true&#34;&gt;&#xA;        &lt;span class=&#34;relative&#34;&gt;rust&lt;/span&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        &lt;clipboard-copy&#xA;          type=&#34;button&#34;&#xA;          aria-label=&#34;Copy code to clipboard&#34;&#xA;          title=&#34;Copy code to clipboard&#34;&#xA;          class=&#34;block cursor-pointer transition-colors hover:text-sky-400&#34;&#xA;          target=&#34;#codeblock-01 code&#34;&#xA;        &gt;&#xA;          &lt;svg&#xA;  xmlns=&#34;http://www.w3.org/2000/svg&#34;&#xA;  fill=&#34;none&#34;&#xA;  stroke=&#34;currentColor&#34;&#xA;  stroke-width=&#34;2&#34;&#xA;  stroke-linecap=&#34;round&#34;&#xA;  stroke-linejoin=&#34;round&#34;&#xA;  class=&#34;lucide lucide-clipboard h-4 w-4&#34;&#xA;  viewBox=&#34;0 0 24 24&#34;&#xA;&gt;&#xA;  &lt;rect width=&#34;8&#34; height=&#34;4&#34; x=&#34;8&#34; y=&#34;2&#34; rx=&#34;1&#34; ry=&#34;1&#34; /&gt;&#xA;  &lt;path d=&#34;M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2&#34; /&gt;&#xA;&lt;/svg&gt;&#xA;&#xA;        &lt;/clipboard-copy&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        &lt;a&#xA;          href=&#34;#codeblock-01&#34;&#xA;          class=&#34;block&#34;&#xA;          aria-label=&#34;Link to this code block&#34;&#xA;          title=&#34;Link to this code block&#34;&#xA;        &gt;&#xA;          &lt;svg&#xA;  xmlns=&#34;http://www.w3.org/2000/svg&#34;&#xA;  width=&#34;16&#34;&#xA;  height=&#34;16&#34;&#xA;  fill=&#34;none&#34;&#xA;  stroke=&#34;currentColor&#34;&#xA;  stroke-linecap=&#34;round&#34;&#xA;  stroke-linejoin=&#34;round&#34;&#xA;  stroke-width=&#34;2&#34;&#xA;  class=&#34;lucide lucide-link w-4 h-4 block&#34;&#xA;  viewBox=&#34;0 0 24 24&#34;&#xA;&gt;&#xA;  &lt;path d=&#34;M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71&#34; /&gt;&#xA;  &lt;path d=&#34;M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71&#34; /&gt;&#xA;&lt;/svg&gt;&#xA;&#xA;        &lt;/a&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/aside&gt;&#xA;  &lt;p class=&#34;sr-only&#34;&gt;rust code snippet start&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zero to Production</title>
      <link>http://localhost:1313/notes/zero2prod/</link>
      <pubDate>Sun, 05 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/zero2prod/</guid>
      <description>&lt;p&gt;A book about making production systems in the &lt;a href=&#34;http://localhost:1313/notes/rust/&#34; class=&#34;backlink&#34;&gt;Rust&lt;/a&gt;&#xA; programming language.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Website: &lt;a href=&#34;https://www.zero2prod.com/index.html&#34;&gt;https://www.zero2prod.com/index.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
