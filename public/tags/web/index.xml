<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Arjen Wiersma</title>
    <link>https://www.arjenwiersma.nl/tags/web/</link>
    <description>Recent content in Web on Arjen Wiersma</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Arjen Wiersma</copyright>
    <lastBuildDate>Wed, 05 Feb 2025 20:40:54 +0100</lastBuildDate>
    <atom:link href="https://www.arjenwiersma.nl/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clojure Projects</title>
      <link>https://www.arjenwiersma.nl/posts/20250205-clojure-projects/</link>
      <pubDate>Wed, 05 Feb 2025 20:40:54 +0100</pubDate>
      <guid>https://www.arjenwiersma.nl/posts/20250205-clojure-projects/</guid>
      <description>When I tell people that I like to code in Clojure the common response is &amp;ldquo;wut?&amp;rdquo;. Clojure is not known as a programming language in which you create big systems. As all Clojure people know, this is not true. There are many systems written in Clojure. Let me show you some that are very actively maintained.&#xA;First there is Lipas, a Finnish platform that shows you information about sports clubs. The structure and techniques used in this code base I use as a reference implementation for my own ClojureScript + Clojure systems.</description>
    </item>
    <item>
      <title>Observability in Clojure</title>
      <link>https://www.arjenwiersma.nl/posts/20250201-observability-in-clojure/</link>
      <pubDate>Sat, 01 Feb 2025 13:03:45 +0100</pubDate>
      <guid>https://www.arjenwiersma.nl/posts/20250201-observability-in-clojure/</guid>
      <description>Observability in cloud-native applications is crucial for managing complex systems and ensuring reliability (Chakraborty &amp;amp; Kundan, 2021; Kosińska et al., 2023). It enables continuous generation of actionable insights based on system signals, helping teams deliver excellent customer experiences despite underlying complexities (Hausenblas, 2023; Chakraborty &amp;amp; Kundan, 2021). In essence, adding proper observability to your system allows you to find and diagnose issues without having to dig through tons of unstructured log files.</description>
    </item>
    <item>
      <title>Build an API with reitit in Clojure</title>
      <link>https://www.arjenwiersma.nl/posts/20250107-clojure-reitit-server/</link>
      <pubDate>Tue, 07 Jan 2025 22:22:22 +0100</pubDate>
      <guid>https://www.arjenwiersma.nl/posts/20250107-clojure-reitit-server/</guid>
      <description>In my previous post I highlighted that I set myself the goal of creating a self hosted comic book collection tool. Before that, in a post about tooling , I reiterated my ❤️ for Clojure as a language. So, this is the start of a series of articles detailing how the development is going, and also as an introduction to the various parts of the tech stack.&#xA;Clojure is special to me in that there are hardly any big frameworks in the ecosystem.</description>
    </item>
  </channel>
</rss>
