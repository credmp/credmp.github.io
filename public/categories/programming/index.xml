<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Arjen Wiersma</title>
    <link>http://localhost:1313/categories/programming/</link>
    <description>Recent content in Programming on Arjen Wiersma</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Arjen Wiersma</copyright>
    <lastBuildDate>Tue, 15 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Developer Growth</title>
      <link>http://localhost:1313/notes/developer-growth/</link>
      <pubDate>Tue, 15 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/developer-growth/</guid>
      <description>Uncle Bob, in his presentations, likes to say that the number of developers in the world doubles every 5 years. Recently The Primeagen in one of his shorts he echos that statement. They both do not give any source for this information, so can it be validated?&#xA;The Netherlands has an agency called Centraal Bureau voor de Statistiek (CBS) which collects all kinds of statistics about the country. It turns out that they also have statistics on the type of field people work in.</description>
    </item>
    <item>
      <title>Clojure Projects</title>
      <link>http://localhost:1313/posts/20250205-clojure-projects/</link>
      <pubDate>Wed, 05 Feb 2025 20:40:54 +0100</pubDate>
      <guid>http://localhost:1313/posts/20250205-clojure-projects/</guid>
      <description>When I tell people that I like to code in Clojure the common response is &amp;ldquo;wut?&amp;rdquo;. Clojure is not known as a programming language in which you create big systems. As all Clojure people know, this is not true. There are many systems written in Clojure. Let me show you some that are very actively maintained.&#xA;First there is Lipas, a Finnish platform that shows you information about sports clubs. The structure and techniques used in this code base I use as a reference implementation for my own ClojureScript + Clojure systems.</description>
    </item>
    <item>
      <title>Observability in Clojure</title>
      <link>http://localhost:1313/posts/20250201-observability-in-clojure/</link>
      <pubDate>Sat, 01 Feb 2025 13:03:45 +0100</pubDate>
      <guid>http://localhost:1313/posts/20250201-observability-in-clojure/</guid>
      <description>Observability in cloud-native applications is crucial for managing complex systems and ensuring reliability (Chakraborty &amp;amp; Kundan, 2021; Kosi≈Ñska et al., 2023). It enables continuous generation of actionable insights based on system signals, helping teams deliver excellent customer experiences despite underlying complexities (Hausenblas, 2023; Chakraborty &amp;amp; Kundan, 2021). In essence, adding proper observability to your system allows you to find and diagnose issues without having to dig through tons of unstructured log files.</description>
    </item>
    <item>
      <title>Digital Ocean, its support and development database</title>
      <link>http://localhost:1313/posts/20250126-digital-ocean-dev-database/</link>
      <pubDate>Sun, 26 Jan 2025 12:31:17 +0100</pubDate>
      <guid>http://localhost:1313/posts/20250126-digital-ocean-dev-database/</guid>
      <description>Tip Currently, only use Postgres 14 on the Digital Ocean application platform for development databases. While following the book Zero2Prod you will learn how to deploy a Rust application to digital ocean through a Continuous Deployment pipeline. This is hardly anything new for me, I even teach a course in DevOps, but to not stray from the path of the book I followed its instructions.&#xA;The spec for digital ocean looks like this (this is abbreviated for your reading pleasure):</description>
    </item>
    <item>
      <title>The joy of NixOS</title>
      <link>http://localhost:1313/posts/20250111-happy-with-nixos/</link>
      <pubDate>Sat, 11 Jan 2025 14:31:20 +0100</pubDate>
      <guid>http://localhost:1313/posts/20250111-happy-with-nixos/</guid>
      <description>In July 2023, I installed NixOS as my daily operating system. NixOS is a Linux distribution that emphasizes a declarative approach to system management. This means you define your desired operating system configuration in a file (e.g., KDE with Emacs 30 and Firefox), and the Nix package manager uses that file to create your OS. Every change generates a new version, allowing you to revert to a previous version if anything goes wrong.</description>
    </item>
    <item>
      <title>Setting up Emacs for Clojure development</title>
      <link>http://localhost:1313/notes/clojure-emacs/</link>
      <pubDate>Thu, 09 Jan 2025 20:25:59 +0100</pubDate>
      <guid>http://localhost:1313/notes/clojure-emacs/</guid>
      <description>Emacs ü•∞ Lisp, and as Clojure is a Lisp like language, Emacs is extremely capable in editing it. I use several packages to make my live a joy inside Emacs, here are the Clojure specific packages:&#xA;paredit: I highly recommend it to work with any lisp, it makes working with the parenthesis a real joy. There is an animated guide of most of the features. cider: The only thing you need to run and work with Clojure files flycheck-clj-kondo: brings the hints from clj-kondo to the editing screen.</description>
    </item>
    <item>
      <title>Build an API with reitit in Clojure</title>
      <link>http://localhost:1313/posts/20250107-clojure-reitit-server/</link>
      <pubDate>Tue, 07 Jan 2025 22:22:22 +0100</pubDate>
      <guid>http://localhost:1313/posts/20250107-clojure-reitit-server/</guid>
      <description>In my previous post I highlighted that I set myself the goal of creating a self hosted comic book collection tool. Before that, in a post about tooling , I reiterated my ‚ù§Ô∏è for Clojure as a language. So, this is the start of a series of articles detailing how the development is going, and also as an introduction to the various parts of the tech stack.&#xA;Clojure is special to me in that there are hardly any big frameworks in the ecosystem.</description>
    </item>
    <item>
      <title>The Clojure programming language</title>
      <link>http://localhost:1313/notes/clojure/</link>
      <pubDate>Tue, 07 Jan 2025 22:18:54 +0100</pubDate>
      <guid>http://localhost:1313/notes/clojure/</guid>
      <description>The Clojure programming language. It is a functional programming language on top of dthe JVM. It is a Lisp like language.</description>
    </item>
    <item>
      <title>Configuring Emacs for Rust development</title>
      <link>http://localhost:1313/notes/rust-emacs/</link>
      <pubDate>Tue, 07 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/rust-emacs/</guid>
      <description>Emacs is great for editing Rust source files. In addition to your normal Emacs configuration (such as completion modes) it requires 3 packages. First you will want lsp-mode, a very full featured LSP client for Emacs. Additionally you will want lsp-ui, which I only use for the lsp-ui-imenu feature.&#xA;Finally you will want to use rustic as primary editing mode for Rust files.&#xA;elisp elisp code snippet start&#xA;;; For all setttings see: https://emacs-lsp.</description>
    </item>
    <item>
      <title>The Rust programming language</title>
      <link>http://localhost:1313/notes/rust/</link>
      <pubDate>Sun, 05 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/rust/</guid>
      <description>This is the rust programming language</description>
    </item>
  </channel>
</rss>
