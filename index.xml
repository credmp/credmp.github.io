<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Arjen Wiersma</title><link>https://www.arjenwiersma.nl/</link><description>Recent content on Arjen Wiersma</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 09 Dec 2023 07:29:00 +0100</lastBuildDate><atom:link href="https://www.arjenwiersma.nl/index.xml" rel="self" type="application/rss+xml"/><item><title>Advent of Code 2023 day 9</title><link>https://www.arjenwiersma.nl/posts/aoc-2023-day-9/</link><pubDate>Sat, 09 Dec 2023 07:29:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/aoc-2023-day-9/</guid><description>The weekend generally is a place to find hard puzzles again, this time not so much. A simple quest to find the next number in a sequence with a fully written out algorithm to follow. They key here is to use recursion.
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;time&amp;#34; &amp;#34;arjenwiersma.nl/aoc/internal/aoc&amp;#34; ) func NextStep(in []int) int { allZero := true for _, v := range in { if v != 0 { allZero = false } } if allZero { return 0 } var diffs []int for i := 1; i &amp;lt; len(in); i++ { diffs = append(diffs, in[i]-in[i-1]) } p := NextStep(diffs) return in[len(in)-1] + p } func main() { content := aoc.</description></item><item><title>Advent of Code 2023 day 8</title><link>https://www.arjenwiersma.nl/posts/aoc-2023-day-8/</link><pubDate>Sat, 09 Dec 2023 07:27:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/aoc-2023-day-8/</guid><description>Somewhat suspicious of 2 easy days we end up at Day 8. A simple map to follow again, from one key follow the instructions until we hit ZZZ. Part 2 had us do it for several keys at once, with the goal to find the spot where they all converge. This can take forever, erhm, a long time.
So there has to be a math type solution to this problem. It turns out to be a Least Common Multiple problem.</description></item><item><title>Advent of Code 2023 day 7</title><link>https://www.arjenwiersma.nl/posts/aoc-2023-day-7/</link><pubDate>Sat, 09 Dec 2023 07:18:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/aoc-2023-day-7/</guid><description>Today we learned about CamelCards, a game of poker meant to play on the back of a camel. The most interesting part here was the parsing of the cards and figuring out how to properly rank them. Part 2 turned out to be as easy as tracking Jokers.
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;sort&amp;#34; &amp;#34;strconv&amp;#34; &amp;#34;strings&amp;#34; &amp;#34;time&amp;#34; &amp;#34;arjenwiersma.nl/aoc/internal/aoc&amp;#34; ) type Card struct { bid int hand []int jokers int } func (c *Card) strongerThen(o *Card) bool { for i, v := range c.</description></item><item><title>Advent of Code 2023 day 6</title><link>https://www.arjenwiersma.nl/posts/aoc-2023-day-6/</link><pubDate>Sat, 09 Dec 2023 07:16:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/aoc-2023-day-6/</guid><description>Day 6 turned out to be the easiest day in the range so far. A simple implementation of the algorithm was more than sufficient.
I later learned that it was a quadratic function. On the subreddit Deatranger999 said:
If you hold down the button for x seconds, then you will beat the distance if the quadratic x^2 - t x + d is at most 0, where t is the total time of the race and d is the distance you&amp;rsquo;d like to beat.</description></item><item><title>Advent of Code 2023 day 5</title><link>https://www.arjenwiersma.nl/posts/aoc-2023-day-5/</link><pubDate>Sat, 09 Dec 2023 07:13:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/aoc-2023-day-5/</guid><description>Today was an interesting problem. We are basically given a map to follow based on a number, possibly transforming the number at each step. With a single number this is quite simple, just apply the rules and step through each set of transformations. The problem becomes tricky when it turns out we have to deal with enormous ranges of numbers. On the subreddit some people reported their implementation to take hours and use 20GB of memory.</description></item><item><title>Advent of Code 2023 Day 4</title><link>https://www.arjenwiersma.nl/posts/aoc-2023-day-4/</link><pubDate>Mon, 04 Dec 2023 23:16:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/aoc-2023-day-4/</guid><description>The difficulty is going up and down. This day was quite easy in comparison to yesterday. Today it was about parsing some numbers and finding a set of winning numbers.
As I am doing these puzzles in Go I found out that there is no default set type. There is an implementation by HashiCorp named go-set that fills this void. I did not use an external package (I try to avoid them while doing AoC), but I am very tempted to pull that package in.</description></item><item><title>Advent of Code 2023 Day 3</title><link>https://www.arjenwiersma.nl/posts/aoc-2023-day-3/</link><pubDate>Sun, 03 Dec 2023 12:38:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/aoc-2023-day-3/</guid><description>Day 3 was quite something. I think that in an attempt to make it harder for AI to solve the puzzles the creators also increased the difficulty level of the base puzzles a little too much. The test was not very clear as to what should happen with negative numbers and it might trip people up. The puzzle itself is a great to exercise grid knowledge as you have to work with neighbors and you have to extend the numbers when you find them.</description></item><item><title>Advent of Code 2023 Day 2</title><link>https://www.arjenwiersma.nl/posts/aoc-2023-day-2/</link><pubDate>Sat, 02 Dec 2023 14:41:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/aoc-2023-day-2/</guid><description>Day 2 was another fun challenge. Lots of splitting of strings. I wonder if there is a better way to filter out the min and max value from the separate grabs.
I am sure I will not be able to complete all challenges this year, but so far so good.
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;os&amp;#34; &amp;#34;strconv&amp;#34; &amp;#34;strings&amp;#34; ) type Grab struct { red, green, blue int } type Game struct { id int grabs []Grab } func main() { content, _ := os.</description></item><item><title>Advent of Code 2023 Day 1</title><link>https://www.arjenwiersma.nl/posts/aoc-2023-day-1/</link><pubDate>Sat, 02 Dec 2023 14:39:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/aoc-2023-day-1/</guid><description>The Advent of Code has started again. At NOVI we participate with a group of our students. We use the AoC throughout the entire curriculum as practice exercises to learn new programming languages or the application of data-structures and algorithms.
Day 1 was a tricky start for most people. Part 1 was not too bad, but part 2 tripped most people up. I guess the idea was that you would have to solve the challenge with an array iteration, but most students tripped up.</description></item><item><title> Embarking on a Journey to Revolutionize Code Editing: The Birth of "BiDE"</title><link>https://www.arjenwiersma.nl/posts/the-start-of-bide/</link><pubDate>Mon, 04 Sep 2023 20:44:00 +0200</pubDate><guid>https://www.arjenwiersma.nl/posts/the-start-of-bide/</guid><description>As the warm haze of summer gives way to the crisp air of autumn, the season marks a pivotal moment in my academic journey: the commencement of my Master&amp;rsquo;s thesis project. Having successfully had my research proposal accepted earlier this year, I now face the last leg of this marathon—bringing my theoretical framework to life.
The Powerhouse Partnership: Open Universiteit and CWI While undertaking a Master&amp;rsquo;s thesis is a significant endeavor on its own, I always have to make it more complex.</description></item><item><title>Perfectionism leads to procrastination and paralysis</title><link>https://www.arjenwiersma.nl/posts/perfectionsim-procrastination/</link><pubDate>Tue, 06 Jun 2023 08:15:00 +0200</pubDate><guid>https://www.arjenwiersma.nl/posts/perfectionsim-procrastination/</guid><description>Working on my thesis research proposal has been quite the journey, and not always in the direction I would have chosen. A personal revelation that struck me during the process is the tight and rather vexing relationship between perfectionism, procrastination, and paralysis.
It&amp;rsquo;s often said that the perfect is the enemy of the good. In my quest for the &amp;lsquo;just right&amp;rsquo; words to articulate my thoughts, I found this saying to be glaringly accurate.</description></item><item><title>Using AI in academics</title><link>https://www.arjenwiersma.nl/posts/ai-in-academics/</link><pubDate>Sat, 20 May 2023 11:00:00 +0200</pubDate><guid>https://www.arjenwiersma.nl/posts/ai-in-academics/</guid><description>Using AI, in particular generative models such as GPT, are in contention within academics. The purity of academics resides in students writing on their research and having their work peer-reviewed. But how can you now be sure that the student wrote the paper and how can you trust its content? Many universities, including the OU have written about it. The OU published an article in Modulair about it. Generally, the consensus seems to be that it is ok to use AI as an assistant, but you must write your texts.</description></item><item><title>Starting my Master Thesis</title><link>https://www.arjenwiersma.nl/posts/starting-master-thesis/</link><pubDate>Thu, 13 Apr 2023 22:15:00 +0200</pubDate><guid>https://www.arjenwiersma.nl/posts/starting-master-thesis/</guid><description>Today, I took the first step towards starting my master&amp;rsquo;s thesis. I have decided to document my journey and experiences on my blog. Given that the thesis will play a pivotal role in my life for the next nine months, I expect it to be a thrilling journey.
Finding a topic As a student at Open Universiteit in The Netherlands, I had the opportunity to work with the Rascal programming language during the Software Quality Management course.</description></item><item><title>Open Universiteit: Software Quality Management</title><link>https://www.arjenwiersma.nl/posts/ou-sqm/</link><pubDate>Sat, 25 Mar 2023 16:31:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/ou-sqm/</guid><description>Background I have been working on getting my Master&amp;rsquo;s degree in Software Engineering. To do this I have started following courses at the Dutch Open Universiteit. They have a Master&amp;rsquo;s program that takes 2 years and you are able to follow it from home.
As this is my first post on the courses, I will give some background. As a teacher it is recommended to have a Master&amp;rsquo;s degree. As I had a whole lot of work experience my teaching activities were not a problem, but from an overall point of view I was advised to pursue an Master degree.</description></item><item><title>Badge Challenge 3</title><link>https://www.arjenwiersma.nl/posts/badge-challenge-3/</link><pubDate>Sun, 12 Mar 2023 12:10:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/badge-challenge-3/</guid><description>Original Post During each in-person Hack The Box meetup I have a small badge challenge that will give the first solver of the challenge a price. at the meetup of March 2023 there will be a very nice little challenge to be done as well, a beautiful NOVI hoodie. You can already download the password protected zip archive. The password will be shared during the meetup opening words.
The zip archive (sha1: 28e84243c79caefce06f62ba2c5d930de37a3439) Good luck.</description></item><item><title>Deployment Anxiety</title><link>https://www.arjenwiersma.nl/posts/deployment-anxiety/</link><pubDate>Wed, 16 Nov 2022 00:00:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/deployment-anxiety/</guid><description>Let me tell you how it was to ship a product out to half a million people back in 1999. But before I do that, let me tell you why. Today I talked to one of my students and he mentioned that he was very nervous about a change he was making. He was afraid it would break things and that he would spend the afternoon working through his CI/CD pipeline to resolve issues.</description></item><item><title>Cleaning up after LSP-mode</title><link>https://www.arjenwiersma.nl/posts/cleaning-up-lsp-mode/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/cleaning-up-lsp-mode/</guid><description>I use lsp-mode quite extensively. I switched from eglot when I started using LSP more. The beautify of lsp-mode is that it will automatically install language servers as you need them. It also integrates excellently with dap-mode to enable debugging sessions. So, I switched to it, turned off all the information overload and I am quite happy.
One thing I do extensively is that I use LaTeX to make my slides for college class slides and class assignments.</description></item><item><title>Should we pay for open source?</title><link>https://www.arjenwiersma.nl/posts/should-we-pay-for-oss/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/should-we-pay-for-oss/</guid><description>As the world is processing the Twitter deal the open source project Mastodon is gaining a lot of traction. The instance that I am on, fosstodon, is run by a small team and is fully funded by donations.
Now this may sound somewhat strange; as the twitterverse is blowing up about $8/month for a blue checkmark I would argue that the $8 is better spent supporting open source projects. As developers, security people, and users we rely on a lot of free time and effort from open source contributors.</description></item><item><title>22 years of Emacs</title><link>https://www.arjenwiersma.nl/posts/22-years-of-emacs/</link><pubDate>Tue, 07 Dec 2021 00:00:00 +0100</pubDate><guid>https://www.arjenwiersma.nl/posts/22-years-of-emacs/</guid><description>Where to begin&amp;hellip; I just watched David Wilson&amp;rsquo;s talk called M-x forever - why Emacs will outlast text editor trends. He gave this talk at EmacsConf 2021 which is a conference dedicated to Emacs. The talk made me reflect on my use of Emacs over the last years and then I realized that this year will mark 22 years that Emacs and I have been together. This (probably too long) article reflects on those years and dives into my use of Emacs.</description></item><item><title>Hack The Box Ambassador</title><link>https://www.arjenwiersma.nl/posts/htb-ambassador/</link><pubDate>Wed, 29 Sep 2021 00:00:00 +0200</pubDate><guid>https://www.arjenwiersma.nl/posts/htb-ambassador/</guid><description>For the last 18 months I have organized the dutch Hack The Box meetups. Due to COVID-19 they have all been as a digital meetup, but not less entertaining though.
During my time organizing the meetups the Hack The Box organization supports me in various ways; they give me stuff to hand out such as swag or VIP memberships, they help organize speakers for events when we don&amp;rsquo;t have one ourselves and they provide me with Hack The Box goodies every once in a while.</description></item><item><title>🌍 Connecting to the vpn</title><link>https://www.arjenwiersma.nl/handbook/100_basics/vpn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.arjenwiersma.nl/handbook/100_basics/vpn/</guid><description>HTB Documentation: Introduction to lab access.
Hack The Box uses a VPN (Virtual Private Network) to connect the users to the machines. To connect to this network we use a tool called openvpn.
Download the openvpn file. Login to Hack The Box. Click on the &amp;#34;Connect to HTB&amp;#34; button. Select the server you want to connect to, then select OpenVPN. Download the OpenVPN file. Connect with OpenVPN Open the file with openvpn within Kali:</description></item><item><title>🐚 Reverse Shells</title><link>https://www.arjenwiersma.nl/handbook/400_shells/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.arjenwiersma.nl/handbook/400_shells/</guid><description>Automatically upgrade a shell By using the following listener any connecting shell will run python3 to get an interactive shell, and it will instantly run stty raw -echo to make sure arrows and control characters work.
stty raw -echo; (echo &amp;#39;python3 -c &amp;#34;import pty;pty.spawn(\&amp;#34;/bin/bash\&amp;#34;)&amp;#34;&amp;#39;;echo pty;echo &amp;#34;stty$(stty -a | awk -F &amp;#39;;&amp;#39; &amp;#39;{print $2 $3}&amp;#39; | head -n 1)&amp;#34;;echo export PATH=\$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/tmp;echo export TERM=xterm-color;echo alias ll=&amp;#39;ls -lsaht&amp;#39;; echo clear; echo id;cat) | nc -lvnp 1234 &amp;amp;&amp;amp; reset Upgrade a non-interactive shell Using python python3 -c &amp;#39;import pty; pty.</description></item><item><title>Basic Linux Commands</title><link>https://www.arjenwiersma.nl/handbook/100_basics/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.arjenwiersma.nl/handbook/100_basics/linux/</guid><description> Copy contents of a file to the clipboard The xclip command is very useful when you want to copy files to the clipboard.
sudo apt install xclip Use it as follows to put something on the internal clipboard of your VM:
cat file | xclip -selection clipboard If you want to use it to copy something from you VM to your host machine, use the primary.
cat file | xclip -selection primary</description></item><item><title>Injection based brute forcer (HTTP)</title><link>https://www.arjenwiersma.nl/handbook/500_code/bruteforcer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.arjenwiersma.nl/handbook/500_code/bruteforcer/</guid><description>Below you will find a bruteforcer for HTTP based NoSQL injections. Obviously, this code is easily adjusted to any type of injection attack through HTTP.
The code will start by iterating over the alphabet, digits and punctuation characters. When a username is found that starts with one of them, through check_username, the rest of the username is brute forced in brute_username. When completing the username, the user&amp;#39;s password is also attacked using brute_password.</description></item><item><title>SNMP</title><link>https://www.arjenwiersma.nl/handbook/200_scanning/snmp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.arjenwiersma.nl/handbook/200_scanning/snmp/</guid><description>Simple Network Management Protocol (SNMP) is an internet protocol used to manage and monitor network devices such as routers, switches, and servers. It operates by allowing network management systems to communicate with these devices, collecting and organizing information about their status and performance. SNMP identifies objects on a network using unique identifiers and manages network devices through get, set, and trap messages. SNMP has three main components: the management system that makes requests, the agents that reply to the requests, and the managed devices that are monitored and controlled by the management system.</description></item><item><title>🧪 Burp Proxy</title><link>https://www.arjenwiersma.nl/handbook/100_basics/burp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.arjenwiersma.nl/handbook/100_basics/burp/</guid><description>To view and manipulate network traffic to and from websites we often use a tool called Burp Suite.
Viewing traffic with the Proxy To view traffic to and from websites Brup makes acts a so-called &amp;#34;proxy&amp;#34;, acting as a middleman between the browser and webserver. The easiest way to connect through this proxy is by using Burp&amp;#39;s built-in browser. To open this browser head to the Proxy tab, the Intercept tab and click on Open Browser.</description></item></channel></rss>